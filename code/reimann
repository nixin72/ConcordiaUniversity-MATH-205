#!/usr/bin/env node
let sum = arr => arr.reduce((a, n) => a += n, 0)
let range = (a, b) => [...Array(b - a + 1).keys()].map(n => n + a)
let reimann = (f, a, b, s) => sum(range(a, b).map(x => f(x + (s == "r" ? 0 : 1))))

let parse = f =>
        f.split("")
                .map((v, k) => /^[a-z]/.test(v) && /^\d/.test(f[k - 1]) ? `*${v}` : v)
                .join("").replace("^", "**");

let f = new Function("x", "return " + parse(process.argv[2]));
let a = +process.argv[3] || -Infinity;
let b = +process.argv[4] || Infinity;
let s = process.argv[5] || "r";

console.log(reimann(f, 1, 3, s[0]));